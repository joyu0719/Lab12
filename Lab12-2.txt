#include "DHT.h"
#include <LWiFi.h> 
#include "MCS.h"
#define DHTPIN 2     // Digital pin connected to the DHT sensor
#include "Arduino.h"
#include "LTimer.h"
#define DHTTYPE DHT11   // DHT 22  (AM2302), AM2321

DHT dht(DHTPIN, DHTTYPE);
char _lwifi_ssid[] = "iPhone";                      //wifi名稱
char _lwifi_pass[] = "19990718";                   //wifi密碼
 float h,t,f;
MCSDevice mcs("DCuE6cME", "APGra0UpGEmosxAl");  // DeviceId , DeviceKey
MCSDisplayFloat Temperature("Temperature");     //設置資料型態 及 (MCS上的) 資料通道 Id: Temperature
MCSDisplayFloat Humidity("Humidity");           //設置資料型態 及 (MCS上的) 資料通道 Id: Humidity
int led0 = 7;
int led1 = 6;
int val0 = 0;
int val1 = 0; 

LTimer timer1(LTIMER_1);

void _callback1(void *usr_data)
{
  // Compute heat index in Fahrenheit (the default)
  float hif = dht.computeHeatIndex(f, h);
  // Compute heat index in Celsius (isFahreheit = false)
  float hic = dht.computeHeatIndex(t, h, false);

  Serial.print(F("Humidity: "));
  Serial.print(h);
  Serial.print(F("%  Temperature: "));
  Serial.print(t);
  Serial.print(F("°C "));
  Serial.print(f);
  Serial.print(F("°F  Heat index: "));
  Serial.print(hic);
  Serial.print(F("°C "));
  Serial.print(hif);
  Serial.println(F("°F"));
} 
void setup() {
  
  Serial.println(F("DHTxx test!"));
  mcs.addChannel(Temperature);                //設置到mcs上
  mcs.addChannel(Humidity);         
  dht.begin();
  Serial.println("Wi-Fi 開始連線");   
  while (WiFi.begin(_lwifi_ssid, _lwifi_pass) != WL_CONNECTED) { delay(1000); }
  Serial.println("Wi-Fi 連線成功");
  while(!mcs.connected()) { mcs.connect(); }
  Serial.println("MCS 連線成功");
  Serial.begin(115200);
  // initialization
 
  timer1.begin();
  // start the execution
  timer1.start(1000, LTIMER_REPEAT_MODE, _callback1, NULL); 
}

void loop() {
  // Wait a few seconds between measurements.
  delay(2000);
   h = dht.readHumidity();
  // Read temperature as Celsius (the default)
   t = dht.readTemperature();
  // Read temperature as Fahrenheit (isFahrenheit = true)
   f = dht.readTemperature(true);
  // Check if any reads failed and exit early (to try again).
  if (isnan(h) || isnan(t) || isnan(f)) {
    Serial.println(F("Failed to read from DHT sensor!"));
    return;
  }
 
}